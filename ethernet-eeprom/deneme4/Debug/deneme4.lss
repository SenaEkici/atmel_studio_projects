
deneme4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000006b6  0000074a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000029e  00800110  00800110  0000075a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000078c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a89  00000000  00000000  000009dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d52  00000000  00000000  00003465  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014ec  00000000  00000000  000041b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000600  00000000  00000000  000056a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a13  00000000  00000000  00005ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002415  00000000  00000000  000066b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00008acc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000006c <__ctors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d4 e0       	ldi	r29, 0x04	; 4
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	11 e0       	ldi	r17, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	e6 eb       	ldi	r30, 0xB6	; 182
  80:	f6 e0       	ldi	r31, 0x06	; 6
  82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
  84:	05 90       	lpm	r0, Z+
  86:	0d 92       	st	X+, r0
  88:	a0 31       	cpi	r26, 0x10	; 16
  8a:	b1 07       	cpc	r27, r17
  8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
  8e:	23 e0       	ldi	r18, 0x03	; 3
  90:	a0 e1       	ldi	r26, 0x10	; 16
  92:	b1 e0       	ldi	r27, 0x01	; 1
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	ae 3a       	cpi	r26, 0xAE	; 174
  9a:	b2 07       	cpc	r27, r18
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>
  9e:	0e 94 09 03 	call	0x612	; 0x612 <main>
  a2:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <enc28j60ReadOp>:
  aa:	2a 98       	cbi	0x05, 2	; 5
  ac:	96 2f       	mov	r25, r22
  ae:	6f 71       	andi	r22, 0x1F	; 31
  b0:	86 2b       	or	r24, r22
  b2:	8e bd       	out	0x2e, r24	; 46
  b4:	0d b4       	in	r0, 0x2d	; 45
  b6:	07 fe       	sbrs	r0, 7
  b8:	fd cf       	rjmp	.-6      	; 0xb4 <enc28j60ReadOp+0xa>
  ba:	1e bc       	out	0x2e, r1	; 46
  bc:	0d b4       	in	r0, 0x2d	; 45
  be:	07 fe       	sbrs	r0, 7
  c0:	fd cf       	rjmp	.-6      	; 0xbc <enc28j60ReadOp+0x12>
  c2:	99 23       	and	r25, r25
  c4:	24 f4       	brge	.+8      	; 0xce <enc28j60ReadOp+0x24>
  c6:	1e bc       	out	0x2e, r1	; 46
  c8:	0d b4       	in	r0, 0x2d	; 45
  ca:	07 fe       	sbrs	r0, 7
  cc:	fd cf       	rjmp	.-6      	; 0xc8 <enc28j60ReadOp+0x1e>
  ce:	2a 9a       	sbi	0x05, 2	; 5
  d0:	8e b5       	in	r24, 0x2e	; 46
  d2:	08 95       	ret

000000d4 <enc28j60WriteOp>:
  d4:	2a 98       	cbi	0x05, 2	; 5
  d6:	6f 71       	andi	r22, 0x1F	; 31
  d8:	86 2b       	or	r24, r22
  da:	8e bd       	out	0x2e, r24	; 46
  dc:	0d b4       	in	r0, 0x2d	; 45
  de:	07 fe       	sbrs	r0, 7
  e0:	fd cf       	rjmp	.-6      	; 0xdc <enc28j60WriteOp+0x8>
  e2:	4e bd       	out	0x2e, r20	; 46
  e4:	0d b4       	in	r0, 0x2d	; 45
  e6:	07 fe       	sbrs	r0, 7
  e8:	fd cf       	rjmp	.-6      	; 0xe4 <enc28j60WriteOp+0x10>
  ea:	2a 9a       	sbi	0x05, 2	; 5
  ec:	08 95       	ret

000000ee <enc28j60ReadBuffer>:
  ee:	fb 01       	movw	r30, r22
  f0:	2a 98       	cbi	0x05, 2	; 5
  f2:	2a e3       	ldi	r18, 0x3A	; 58
  f4:	2e bd       	out	0x2e, r18	; 46
  f6:	0d b4       	in	r0, 0x2d	; 45
  f8:	07 fe       	sbrs	r0, 7
  fa:	fd cf       	rjmp	.-6      	; 0xf6 <enc28j60ReadBuffer+0x8>
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	69 f0       	breq	.+26     	; 0x11a <enc28j60ReadBuffer+0x2c>
 100:	df 01       	movw	r26, r30
 102:	a8 0f       	add	r26, r24
 104:	b9 1f       	adc	r27, r25
 106:	1e bc       	out	0x2e, r1	; 46
 108:	0d b4       	in	r0, 0x2d	; 45
 10a:	07 fe       	sbrs	r0, 7
 10c:	fd cf       	rjmp	.-6      	; 0x108 <enc28j60ReadBuffer+0x1a>
 10e:	9e b5       	in	r25, 0x2e	; 46
 110:	91 93       	st	Z+, r25
 112:	ea 17       	cp	r30, r26
 114:	fb 07       	cpc	r31, r27
 116:	b9 f7       	brne	.-18     	; 0x106 <enc28j60ReadBuffer+0x18>
 118:	01 c0       	rjmp	.+2      	; 0x11c <enc28j60ReadBuffer+0x2e>
 11a:	df 01       	movw	r26, r30
 11c:	1c 92       	st	X, r1
 11e:	2a 9a       	sbi	0x05, 2	; 5
 120:	08 95       	ret

00000122 <enc28j60WriteBuffer>:
 122:	fb 01       	movw	r30, r22
 124:	2a 98       	cbi	0x05, 2	; 5
 126:	2a e7       	ldi	r18, 0x7A	; 122
 128:	2e bd       	out	0x2e, r18	; 46
 12a:	0d b4       	in	r0, 0x2d	; 45
 12c:	07 fe       	sbrs	r0, 7
 12e:	fd cf       	rjmp	.-6      	; 0x12a <enc28j60WriteBuffer+0x8>
 130:	09 c0       	rjmp	.+18     	; 0x144 <enc28j60WriteBuffer+0x22>
 132:	9f 01       	movw	r18, r30
 134:	28 0f       	add	r18, r24
 136:	39 1f       	adc	r19, r25
 138:	91 91       	ld	r25, Z+
 13a:	9e bd       	out	0x2e, r25	; 46
 13c:	0d b4       	in	r0, 0x2d	; 45
 13e:	07 fe       	sbrs	r0, 7
 140:	fd cf       	rjmp	.-6      	; 0x13c <enc28j60WriteBuffer+0x1a>
 142:	03 c0       	rjmp	.+6      	; 0x14a <enc28j60WriteBuffer+0x28>
 144:	00 97       	sbiw	r24, 0x00	; 0
 146:	a9 f7       	brne	.-22     	; 0x132 <enc28j60WriteBuffer+0x10>
 148:	03 c0       	rjmp	.+6      	; 0x150 <enc28j60WriteBuffer+0x2e>
 14a:	2e 17       	cp	r18, r30
 14c:	3f 07       	cpc	r19, r31
 14e:	a1 f7       	brne	.-24     	; 0x138 <enc28j60WriteBuffer+0x16>
 150:	2a 9a       	sbi	0x05, 2	; 5
 152:	08 95       	ret

00000154 <enc28j60SetBank>:
 154:	1f 93       	push	r17
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	18 2f       	mov	r17, r24
 15c:	10 76       	andi	r17, 0x60	; 96
 15e:	c1 2f       	mov	r28, r17
 160:	d0 e0       	ldi	r29, 0x00	; 0
 162:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <Enc28j60Bank>
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	c8 17       	cp	r28, r24
 16a:	d9 07       	cpc	r29, r25
 16c:	b1 f0       	breq	.+44     	; 0x19a <enc28j60SetBank+0x46>
 16e:	43 e0       	ldi	r20, 0x03	; 3
 170:	6f e1       	ldi	r22, 0x1F	; 31
 172:	80 ea       	ldi	r24, 0xA0	; 160
 174:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 178:	ae 01       	movw	r20, r28
 17a:	55 95       	asr	r21
 17c:	47 95       	ror	r20
 17e:	55 95       	asr	r21
 180:	47 95       	ror	r20
 182:	55 95       	asr	r21
 184:	47 95       	ror	r20
 186:	55 95       	asr	r21
 188:	47 95       	ror	r20
 18a:	55 95       	asr	r21
 18c:	47 95       	ror	r20
 18e:	6f e1       	ldi	r22, 0x1F	; 31
 190:	80 e8       	ldi	r24, 0x80	; 128
 192:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 196:	10 93 12 01 	sts	0x0112, r17	; 0x800112 <Enc28j60Bank>
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	08 95       	ret

000001a2 <enc28j60Read>:
 1a2:	cf 93       	push	r28
 1a4:	c8 2f       	mov	r28, r24
 1a6:	0e 94 aa 00 	call	0x154	; 0x154 <enc28j60SetBank>
 1aa:	6c 2f       	mov	r22, r28
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <enc28j60Write>:
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	c8 2f       	mov	r28, r24
 1bc:	d6 2f       	mov	r29, r22
 1be:	0e 94 aa 00 	call	0x154	; 0x154 <enc28j60SetBank>
 1c2:	4d 2f       	mov	r20, r29
 1c4:	6c 2f       	mov	r22, r28
 1c6:	80 e4       	ldi	r24, 0x40	; 64
 1c8:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <enc28j60PhyWrite>:
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	d6 2f       	mov	r29, r22
 1d8:	c7 2f       	mov	r28, r23
 1da:	68 2f       	mov	r22, r24
 1dc:	84 ed       	ldi	r24, 0xD4	; 212
 1de:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 1e2:	6d 2f       	mov	r22, r29
 1e4:	86 ed       	ldi	r24, 0xD6	; 214
 1e6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 1ea:	6c 2f       	mov	r22, r28
 1ec:	87 ed       	ldi	r24, 0xD7	; 215
 1ee:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 1f2:	c8 e2       	ldi	r28, 0x28	; 40
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <enc28j60PhyWrite+0x2a>
 1f6:	8c 2f       	mov	r24, r28
 1f8:	8a 95       	dec	r24
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <enc28j60PhyWrite+0x26>
 1fc:	8a ee       	ldi	r24, 0xEA	; 234
 1fe:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <enc28j60Read>
 202:	80 fd       	sbrc	r24, 0
 204:	f8 cf       	rjmp	.-16     	; 0x1f6 <enc28j60PhyWrite+0x24>
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	08 95       	ret

0000020c <enc28j60clkout>:
 20c:	68 2f       	mov	r22, r24
 20e:	67 70       	andi	r22, 0x07	; 7
 210:	85 e7       	ldi	r24, 0x75	; 117
 212:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 216:	08 95       	ret

00000218 <enc28j60Init>:
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	ec 01       	movw	r28, r24
 21e:	22 9a       	sbi	0x04, 2	; 4
 220:	2a 9a       	sbi	0x05, 2	; 5
 222:	84 b1       	in	r24, 0x04	; 4
 224:	88 62       	ori	r24, 0x28	; 40
 226:	84 b9       	out	0x04, r24	; 4
 228:	24 9a       	sbi	0x04, 4	; 4
 22a:	2b 9a       	sbi	0x05, 3	; 5
 22c:	2d 9a       	sbi	0x05, 5	; 5
 22e:	80 e5       	ldi	r24, 0x50	; 80
 230:	8c bd       	out	0x2c, r24	; 44
 232:	8d b5       	in	r24, 0x2d	; 45
 234:	81 60       	ori	r24, 0x01	; 1
 236:	8d bd       	out	0x2d, r24	; 45
 238:	4f ef       	ldi	r20, 0xFF	; 255
 23a:	60 e0       	ldi	r22, 0x00	; 0
 23c:	8f ef       	ldi	r24, 0xFF	; 255
 23e:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <enc28j60Init+0x2e>
 24a:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x1>
 24e:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	88 e0       	ldi	r24, 0x08	; 8
 256:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	89 e0       	ldi	r24, 0x09	; 9
 25e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	8c e0       	ldi	r24, 0x0C	; 12
 266:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 26a:	60 e0       	ldi	r22, 0x00	; 0
 26c:	8d e0       	ldi	r24, 0x0D	; 13
 26e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 272:	6e ef       	ldi	r22, 0xFE	; 254
 274:	8a e0       	ldi	r24, 0x0A	; 10
 276:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 27a:	69 e1       	ldi	r22, 0x19	; 25
 27c:	8b e0       	ldi	r24, 0x0B	; 11
 27e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 282:	6f ef       	ldi	r22, 0xFF	; 255
 284:	84 e0       	ldi	r24, 0x04	; 4
 286:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 28a:	69 e1       	ldi	r22, 0x19	; 25
 28c:	85 e0       	ldi	r24, 0x05	; 5
 28e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 292:	6f ef       	ldi	r22, 0xFF	; 255
 294:	86 e0       	ldi	r24, 0x06	; 6
 296:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 29a:	6f e1       	ldi	r22, 0x1F	; 31
 29c:	87 e0       	ldi	r24, 0x07	; 7
 29e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2a2:	60 eb       	ldi	r22, 0xB0	; 176
 2a4:	88 e3       	ldi	r24, 0x38	; 56
 2a6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2aa:	6f e3       	ldi	r22, 0x3F	; 63
 2ac:	88 e2       	ldi	r24, 0x28	; 40
 2ae:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2b2:	60 e3       	ldi	r22, 0x30	; 48
 2b4:	89 e2       	ldi	r24, 0x29	; 41
 2b6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2ba:	69 ef       	ldi	r22, 0xF9	; 249
 2bc:	80 e3       	ldi	r24, 0x30	; 48
 2be:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2c2:	67 ef       	ldi	r22, 0xF7	; 247
 2c4:	81 e3       	ldi	r24, 0x31	; 49
 2c6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2ca:	6d e0       	ldi	r22, 0x0D	; 13
 2cc:	80 ec       	ldi	r24, 0xC0	; 192
 2ce:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	81 ec       	ldi	r24, 0xC1	; 193
 2d6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2da:	42 e3       	ldi	r20, 0x32	; 50
 2dc:	62 ec       	ldi	r22, 0xC2	; 194
 2de:	80 e8       	ldi	r24, 0x80	; 128
 2e0:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 2e4:	62 e1       	ldi	r22, 0x12	; 18
 2e6:	86 ec       	ldi	r24, 0xC6	; 198
 2e8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2ec:	6c e0       	ldi	r22, 0x0C	; 12
 2ee:	87 ec       	ldi	r24, 0xC7	; 199
 2f0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2f4:	62 e1       	ldi	r22, 0x12	; 18
 2f6:	84 ec       	ldi	r24, 0xC4	; 196
 2f8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 2fc:	6c ed       	ldi	r22, 0xDC	; 220
 2fe:	8a ec       	ldi	r24, 0xCA	; 202
 300:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 304:	65 e0       	ldi	r22, 0x05	; 5
 306:	8b ec       	ldi	r24, 0xCB	; 203
 308:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 30c:	68 81       	ld	r22, Y
 30e:	84 ee       	ldi	r24, 0xE4	; 228
 310:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 314:	69 81       	ldd	r22, Y+1	; 0x01
 316:	85 ee       	ldi	r24, 0xE5	; 229
 318:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 31c:	6a 81       	ldd	r22, Y+2	; 0x02
 31e:	82 ee       	ldi	r24, 0xE2	; 226
 320:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 324:	6b 81       	ldd	r22, Y+3	; 0x03
 326:	83 ee       	ldi	r24, 0xE3	; 227
 328:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 32c:	6c 81       	ldd	r22, Y+4	; 0x04
 32e:	80 ee       	ldi	r24, 0xE0	; 224
 330:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 334:	6d 81       	ldd	r22, Y+5	; 0x05
 336:	81 ee       	ldi	r24, 0xE1	; 225
 338:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	71 e0       	ldi	r23, 0x01	; 1
 340:	80 e1       	ldi	r24, 0x10	; 16
 342:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <enc28j60PhyWrite>
 346:	8f e1       	ldi	r24, 0x1F	; 31
 348:	0e 94 aa 00 	call	0x154	; 0x154 <enc28j60SetBank>
 34c:	40 ec       	ldi	r20, 0xC0	; 192
 34e:	6b e1       	ldi	r22, 0x1B	; 27
 350:	80 e8       	ldi	r24, 0x80	; 128
 352:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 356:	44 e0       	ldi	r20, 0x04	; 4
 358:	6f e1       	ldi	r22, 0x1F	; 31
 35a:	80 e8       	ldi	r24, 0x80	; 128
 35c:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <enc28j60PacketSend>:
 366:	0f 93       	push	r16
 368:	1f 93       	push	r17
 36a:	cf 93       	push	r28
 36c:	df 93       	push	r29
 36e:	ec 01       	movw	r28, r24
 370:	8b 01       	movw	r16, r22
 372:	0f c0       	rjmp	.+30     	; 0x392 <enc28j60PacketSend+0x2c>
 374:	8c e1       	ldi	r24, 0x1C	; 28
 376:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <enc28j60Read>
 37a:	81 ff       	sbrs	r24, 1
 37c:	0a c0       	rjmp	.+20     	; 0x392 <enc28j60PacketSend+0x2c>
 37e:	40 e8       	ldi	r20, 0x80	; 128
 380:	6f e1       	ldi	r22, 0x1F	; 31
 382:	80 e8       	ldi	r24, 0x80	; 128
 384:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 388:	40 e8       	ldi	r20, 0x80	; 128
 38a:	6f e1       	ldi	r22, 0x1F	; 31
 38c:	80 ea       	ldi	r24, 0xA0	; 160
 38e:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 392:	6f e1       	ldi	r22, 0x1F	; 31
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 39a:	83 fd       	sbrc	r24, 3
 39c:	eb cf       	rjmp	.-42     	; 0x374 <enc28j60PacketSend+0xe>
 39e:	6f ef       	ldi	r22, 0xFF	; 255
 3a0:	82 e0       	ldi	r24, 0x02	; 2
 3a2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 3a6:	69 e1       	ldi	r22, 0x19	; 25
 3a8:	83 e0       	ldi	r24, 0x03	; 3
 3aa:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 3ae:	6c 2f       	mov	r22, r28
 3b0:	61 50       	subi	r22, 0x01	; 1
 3b2:	86 e0       	ldi	r24, 0x06	; 6
 3b4:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 3b8:	ce 01       	movw	r24, r28
 3ba:	81 50       	subi	r24, 0x01	; 1
 3bc:	96 4e       	sbci	r25, 0xE6	; 230
 3be:	69 2f       	mov	r22, r25
 3c0:	87 e0       	ldi	r24, 0x07	; 7
 3c2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 3c6:	40 e0       	ldi	r20, 0x00	; 0
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	8a e7       	ldi	r24, 0x7A	; 122
 3cc:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 3d0:	b8 01       	movw	r22, r16
 3d2:	ce 01       	movw	r24, r28
 3d4:	0e 94 91 00 	call	0x122	; 0x122 <enc28j60WriteBuffer>
 3d8:	48 e0       	ldi	r20, 0x08	; 8
 3da:	6f e1       	ldi	r22, 0x1F	; 31
 3dc:	80 e8       	ldi	r24, 0x80	; 128
 3de:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	08 95       	ret

000003ec <enc28j60PacketReceive>:
 3ec:	af 92       	push	r10
 3ee:	bf 92       	push	r11
 3f0:	cf 92       	push	r12
 3f2:	df 92       	push	r13
 3f4:	ef 92       	push	r14
 3f6:	ff 92       	push	r15
 3f8:	0f 93       	push	r16
 3fa:	1f 93       	push	r17
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	6c 01       	movw	r12, r24
 402:	7b 01       	movw	r14, r22
 404:	89 e3       	ldi	r24, 0x39	; 57
 406:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <enc28j60Read>
 40a:	88 23       	and	r24, r24
 40c:	09 f4       	brne	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	6d c0       	rjmp	.+218    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 410:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 414:	c0 91 11 01 	lds	r28, 0x0111	; 0x800111 <__data_end+0x1>
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 41e:	6c 2f       	mov	r22, r28
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	8a e3       	ldi	r24, 0x3A	; 58
 42a:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 42e:	c8 2f       	mov	r28, r24
 430:	60 e0       	ldi	r22, 0x00	; 0
 432:	8a e3       	ldi	r24, 0x3A	; 58
 434:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 438:	d0 e0       	ldi	r29, 0x00	; 0
 43a:	d8 2b       	or	r29, r24
 43c:	d0 93 11 01 	sts	0x0111, r29	; 0x800111 <__data_end+0x1>
 440:	c0 93 10 01 	sts	0x0110, r28	; 0x800110 <__data_end>
 444:	60 e0       	ldi	r22, 0x00	; 0
 446:	8a e3       	ldi	r24, 0x3A	; 58
 448:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 44c:	b8 2e       	mov	r11, r24
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	8a e3       	ldi	r24, 0x3A	; 58
 452:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 456:	a8 2e       	mov	r10, r24
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	8a e3       	ldi	r24, 0x3A	; 58
 45c:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 460:	08 2f       	mov	r16, r24
 462:	60 e0       	ldi	r22, 0x00	; 0
 464:	8a e3       	ldi	r24, 0x3A	; 58
 466:	0e 94 55 00 	call	0xaa	; 0xaa <enc28j60ReadOp>
 46a:	07 ff       	sbrs	r16, 7
 46c:	11 c0       	rjmp	.+34     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	c8 1a       	sub	r12, r24
 472:	d1 08       	sbc	r13, r1
 474:	0b 2d       	mov	r16, r11
 476:	10 e0       	ldi	r17, 0x00	; 0
 478:	1a 29       	or	r17, r10
 47a:	04 50       	subi	r16, 0x04	; 4
 47c:	11 09       	sbc	r17, r1
 47e:	c0 16       	cp	r12, r16
 480:	d1 06       	cpc	r13, r17
 482:	08 f4       	brcc	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 484:	86 01       	movw	r16, r12
 486:	b7 01       	movw	r22, r14
 488:	c8 01       	movw	r24, r16
 48a:	0e 94 77 00 	call	0xee	; 0xee <enc28j60ReadBuffer>
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 490:	00 e0       	ldi	r16, 0x00	; 0
 492:	10 e0       	ldi	r17, 0x00	; 0
 494:	6c 2f       	mov	r22, r28
 496:	8c e0       	ldi	r24, 0x0C	; 12
 498:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 49c:	6d 2f       	mov	r22, r29
 49e:	8d e0       	ldi	r24, 0x0D	; 13
 4a0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 4a4:	7e 01       	movw	r14, r28
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	e8 1a       	sub	r14, r24
 4aa:	f1 08       	sbc	r15, r1
 4ac:	8f ef       	ldi	r24, 0xFF	; 255
 4ae:	e8 16       	cp	r14, r24
 4b0:	89 e1       	ldi	r24, 0x19	; 25
 4b2:	f8 06       	cpc	r15, r24
 4b4:	48 f0       	brcs	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	6e ef       	ldi	r22, 0xFE	; 254
 4b8:	8c e0       	ldi	r24, 0x0C	; 12
 4ba:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 4be:	69 e1       	ldi	r22, 0x19	; 25
 4c0:	8d e0       	ldi	r24, 0x0D	; 13
 4c2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c8:	6c 2f       	mov	r22, r28
 4ca:	61 50       	subi	r22, 0x01	; 1
 4cc:	8c e0       	ldi	r24, 0x0C	; 12
 4ce:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 4d2:	6f 2d       	mov	r22, r15
 4d4:	8d e0       	ldi	r24, 0x0D	; 13
 4d6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <enc28j60Write>
 4da:	40 e4       	ldi	r20, 0x40	; 64
 4dc:	6e e1       	ldi	r22, 0x1E	; 30
 4de:	80 e8       	ldi	r24, 0x80	; 128
 4e0:	0e 94 6a 00 	call	0xd4	; 0xd4 <enc28j60WriteOp>
 4e4:	80 2f       	mov	r24, r16
 4e6:	91 2f       	mov	r25, r17
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	df 91       	pop	r29
 4f0:	cf 91       	pop	r28
 4f2:	1f 91       	pop	r17
 4f4:	0f 91       	pop	r16
 4f6:	ff 90       	pop	r15
 4f8:	ef 90       	pop	r14
 4fa:	df 90       	pop	r13
 4fc:	cf 90       	pop	r12
 4fe:	bf 90       	pop	r11
 500:	af 90       	pop	r10
 502:	08 95       	ret

00000504 <init_ip_arp_udp_tcp>:
 504:	50 93 22 01 	sts	0x0122, r21	; 0x800122 <wwwport_h>
 508:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
 50c:	a6 2f       	mov	r26, r22
 50e:	b7 2f       	mov	r27, r23
 510:	e3 e1       	ldi	r30, 0x13	; 19
 512:	f1 e0       	ldi	r31, 0x01	; 1
 514:	47 e1       	ldi	r20, 0x17	; 23
 516:	51 e0       	ldi	r21, 0x01	; 1
 518:	2d 91       	ld	r18, X+
 51a:	21 93       	st	Z+, r18
 51c:	e4 17       	cp	r30, r20
 51e:	f5 07       	cpc	r31, r21
 520:	d9 f7       	brne	.-10     	; 0x518 <init_ip_arp_udp_tcp+0x14>
 522:	a8 2f       	mov	r26, r24
 524:	b9 2f       	mov	r27, r25
 526:	e7 e1       	ldi	r30, 0x17	; 23
 528:	f1 e0       	ldi	r31, 0x01	; 1
 52a:	2d e1       	ldi	r18, 0x1D	; 29
 52c:	31 e0       	ldi	r19, 0x01	; 1
 52e:	8d 91       	ld	r24, X+
 530:	81 93       	st	Z+, r24
 532:	e2 17       	cp	r30, r18
 534:	f3 07       	cpc	r31, r19
 536:	d9 f7       	brne	.-10     	; 0x52e <init_ip_arp_udp_tcp+0x2a>
 538:	08 95       	ret

0000053a <eth_type_is_arp_and_my_ip>:
 53a:	69 32       	cpi	r22, 0x29	; 41
 53c:	71 05       	cpc	r23, r1
 53e:	c8 f0       	brcs	.+50     	; 0x572 <eth_type_is_arp_and_my_ip+0x38>
 540:	fc 01       	movw	r30, r24
 542:	24 85       	ldd	r18, Z+12	; 0x0c
 544:	28 30       	cpi	r18, 0x08	; 8
 546:	b9 f4       	brne	.+46     	; 0x576 <eth_type_is_arp_and_my_ip+0x3c>
 548:	25 85       	ldd	r18, Z+13	; 0x0d
 54a:	26 30       	cpi	r18, 0x06	; 6
 54c:	b1 f4       	brne	.+44     	; 0x57a <eth_type_is_arp_and_my_ip+0x40>
 54e:	36 a1       	ldd	r19, Z+38	; 0x26
 550:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <ipaddr>
 554:	32 13       	cpse	r19, r18
 556:	13 c0       	rjmp	.+38     	; 0x57e <eth_type_is_arp_and_my_ip+0x44>
 558:	b7 96       	adiw	r30, 0x27	; 39
 55a:	a4 e1       	ldi	r26, 0x14	; 20
 55c:	b1 e0       	ldi	r27, 0x01	; 1
 55e:	8a 96       	adiw	r24, 0x2a	; 42
 560:	31 91       	ld	r19, Z+
 562:	2d 91       	ld	r18, X+
 564:	32 13       	cpse	r19, r18
 566:	0d c0       	rjmp	.+26     	; 0x582 <eth_type_is_arp_and_my_ip+0x48>
 568:	e8 17       	cp	r30, r24
 56a:	f9 07       	cpc	r31, r25
 56c:	c9 f7       	brne	.-14     	; 0x560 <eth_type_is_arp_and_my_ip+0x26>
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	08 95       	ret
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	08 95       	ret
 576:	80 e0       	ldi	r24, 0x00	; 0
 578:	08 95       	ret
 57a:	80 e0       	ldi	r24, 0x00	; 0
 57c:	08 95       	ret
 57e:	80 e0       	ldi	r24, 0x00	; 0
 580:	08 95       	ret
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	08 95       	ret

00000586 <make_eth>:
 586:	fc 01       	movw	r30, r24
 588:	a7 e1       	ldi	r26, 0x17	; 23
 58a:	b1 e0       	ldi	r27, 0x01	; 1
 58c:	9c 01       	movw	r18, r24
 58e:	2a 5f       	subi	r18, 0xFA	; 250
 590:	3f 4f       	sbci	r19, 0xFF	; 255
 592:	86 81       	ldd	r24, Z+6	; 0x06
 594:	81 93       	st	Z+, r24
 596:	8d 91       	ld	r24, X+
 598:	85 83       	std	Z+5, r24	; 0x05
 59a:	e2 17       	cp	r30, r18
 59c:	f3 07       	cpc	r31, r19
 59e:	c9 f7       	brne	.-14     	; 0x592 <make_eth+0xc>
 5a0:	08 95       	ret

000005a2 <make_arp_answer_from_request>:
 5a2:	cf 93       	push	r28
 5a4:	df 93       	push	r29
 5a6:	ec 01       	movw	r28, r24
 5a8:	0e 94 c3 02 	call	0x586	; 0x586 <make_eth>
 5ac:	1c 8a       	std	Y+20, r1	; 0x14
 5ae:	82 e0       	ldi	r24, 0x02	; 2
 5b0:	8d 8b       	std	Y+21, r24	; 0x15
 5b2:	a7 e1       	ldi	r26, 0x17	; 23
 5b4:	b1 e0       	ldi	r27, 0x01	; 1
 5b6:	fe 01       	movw	r30, r28
 5b8:	76 96       	adiw	r30, 0x16	; 22
 5ba:	2d e1       	ldi	r18, 0x1D	; 29
 5bc:	31 e0       	ldi	r19, 0x01	; 1
 5be:	80 81       	ld	r24, Z
 5c0:	82 87       	std	Z+10, r24	; 0x0a
 5c2:	8d 91       	ld	r24, X+
 5c4:	81 93       	st	Z+, r24
 5c6:	a2 17       	cp	r26, r18
 5c8:	b3 07       	cpc	r27, r19
 5ca:	c9 f7       	brne	.-14     	; 0x5be <make_arp_answer_from_request+0x1c>
 5cc:	a3 e1       	ldi	r26, 0x13	; 19
 5ce:	b1 e0       	ldi	r27, 0x01	; 1
 5d0:	fe 01       	movw	r30, r28
 5d2:	7c 96       	adiw	r30, 0x1c	; 28
 5d4:	27 e1       	ldi	r18, 0x17	; 23
 5d6:	31 e0       	ldi	r19, 0x01	; 1
 5d8:	80 81       	ld	r24, Z
 5da:	82 87       	std	Z+10, r24	; 0x0a
 5dc:	8d 91       	ld	r24, X+
 5de:	81 93       	st	Z+, r24
 5e0:	a2 17       	cp	r26, r18
 5e2:	b3 07       	cpc	r27, r19
 5e4:	c9 f7       	brne	.-14     	; 0x5d8 <make_arp_answer_from_request+0x36>
 5e6:	be 01       	movw	r22, r28
 5e8:	8a e2       	ldi	r24, 0x2A	; 42
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 94 b3 01 	call	0x366	; 0x366 <enc28j60PacketSend>
 5f0:	df 91       	pop	r29
 5f2:	cf 91       	pop	r28
 5f4:	08 95       	ret

000005f6 <client_set_gwip>:
 5f6:	21 e0       	ldi	r18, 0x01	; 1
 5f8:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <waitgwmac>
 5fc:	dc 01       	movw	r26, r24
 5fe:	ee e1       	ldi	r30, 0x1E	; 30
 600:	f1 e0       	ldi	r31, 0x01	; 1
 602:	22 e2       	ldi	r18, 0x22	; 34
 604:	31 e0       	ldi	r19, 0x01	; 1
 606:	8d 91       	ld	r24, X+
 608:	81 93       	st	Z+, r24
 60a:	e2 17       	cp	r30, r18
 60c:	f3 07       	cpc	r31, r19
 60e:	d9 f7       	brne	.-10     	; 0x606 <client_set_gwip+0x10>
 610:	08 95       	ret

00000612 <main>:
int main (void) {
	
	      uint16_t plen;
	      char okunan;
		  
		  DDRD =0XFF;
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	8a b9       	out	0x0a, r24	; 10
		  PORTD=0X00;
 616:	1b b8       	out	0x0b, r1	; 11
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 618:	c0 e0       	ldi	r28, 0x00	; 0
 61a:	8c 2f       	mov	r24, r28
 61c:	8a 95       	dec	r24
 61e:	f1 f7       	brne	.-4      	; 0x61c <main+0xa>
    return (0);
}

static void net_init (void) {
    _delay_loop_1(0);
    enc28j60Init(mac_address);
 620:	89 e0       	ldi	r24, 0x09	; 9
 622:	91 e0       	ldi	r25, 0x01	; 1
 624:	0e 94 0c 01 	call	0x218	; 0x218 <enc28j60Init>
    enc28j60clkout(2);
 628:	82 e0       	ldi	r24, 0x02	; 2
 62a:	0e 94 06 01 	call	0x20c	; 0x20c <enc28j60clkout>
 62e:	8c 2f       	mov	r24, r28
 630:	8a 95       	dec	r24
 632:	f1 f7       	brne	.-4      	; 0x630 <main+0x1e>
    _delay_loop_1(0);
    enc28j60PhyWrite(PHLCON,0x476);
 634:	66 e7       	ldi	r22, 0x76	; 118
 636:	74 e0       	ldi	r23, 0x04	; 4
 638:	84 e1       	ldi	r24, 0x14	; 20
 63a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <enc28j60PhyWrite>
 63e:	ca 95       	dec	r28
 640:	f1 f7       	brne	.-4      	; 0x63e <main+0x2c>
   _delay_loop_1(0);
    init_ip_arp_udp_tcp(mac_address,local_host,local_port);
 642:	40 ed       	ldi	r20, 0xD0	; 208
 644:	57 e0       	ldi	r21, 0x07	; 7
 646:	65 e0       	ldi	r22, 0x05	; 5
 648:	71 e0       	ldi	r23, 0x01	; 1
 64a:	89 e0       	ldi	r24, 0x09	; 9
 64c:	91 e0       	ldi	r25, 0x01	; 1
 64e:	0e 94 82 02 	call	0x504	; 0x504 <init_ip_arp_udp_tcp>
    client_set_gwip(gateway);
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	91 e0       	ldi	r25, 0x01	; 1
 656:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <client_set_gwip>
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);
	while((TWCR &(1<<TWSTO)));
}
static void usart_init(void)
{
	UBRR0L = BAUD_PRESCALE;			/* Load lower 8-bits of the baud rate */
 65a:	87 e6       	ldi	r24, 0x67	; 103
 65c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UBRR0H = (BAUD_PRESCALE >> 8);		/* Load upper 8-bits*/
 660:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UCSR0B =  (1 << TXEN0);	//enable the receiver and transmitter.
 664:	88 e0       	ldi	r24, 0x08	; 8
 666:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);
 66a:	86 e0       	ldi	r24, 0x06	; 6
 66c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    client_set_gwip(gateway);
}

void TWI_init()
{
	  TWSR = 0x00;
 670:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	  TWBR = 0x62;
 674:	82 e6       	ldi	r24, 0x62	; 98
 676:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	  TWCR = (1<<TWEN);
 67a:	84 e0       	ldi	r24, 0x04	; 4
 67c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		  TWI_init();
		  int i=42;
          while(1) {
			  plen=enc28j60PacketReceive(BUFFER_SIZE, buf);
			  if(plen==0) continue;
			    UDR0=buf[i];
 680:	c6 ec       	ldi	r28, 0xC6	; 198
 682:	d0 e0       	ldi	r29, 0x00	; 0
          net_init();
		  usart_init();
		  TWI_init();
		  int i=42;
          while(1) {
			  plen=enc28j60PacketReceive(BUFFER_SIZE, buf);
 684:	63 e2       	ldi	r22, 0x23	; 35
 686:	71 e0       	ldi	r23, 0x01	; 1
 688:	8a e8       	ldi	r24, 0x8A	; 138
 68a:	92 e0       	ldi	r25, 0x02	; 2
 68c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <enc28j60PacketReceive>
			  if(plen==0) continue;
 690:	00 97       	sbiw	r24, 0x00	; 0
 692:	c1 f3       	breq	.-16     	; 0x684 <main+0x72>
			    UDR0=buf[i];
 694:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <buf+0x2a>
 698:	28 83       	st	Y, r18
			  
			 if(eth_type_is_arp_and_my_ip(buf,plen)){
 69a:	bc 01       	movw	r22, r24
 69c:	83 e2       	ldi	r24, 0x23	; 35
 69e:	91 e0       	ldi	r25, 0x01	; 1
 6a0:	0e 94 9d 02 	call	0x53a	; 0x53a <eth_type_is_arp_and_my_ip>
 6a4:	89 2b       	or	r24, r25
 6a6:	71 f3       	breq	.-36     	; 0x684 <main+0x72>
				 make_arp_answer_from_request(buf);	
 6a8:	83 e2       	ldi	r24, 0x23	; 35
 6aa:	91 e0       	ldi	r25, 0x01	; 1
 6ac:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <make_arp_answer_from_request>
				 continue;
 6b0:	e9 cf       	rjmp	.-46     	; 0x684 <main+0x72>

000006b2 <_exit>:
 6b2:	f8 94       	cli

000006b4 <__stop_program>:
 6b4:	ff cf       	rjmp	.-2      	; 0x6b4 <__stop_program>
